/* 
 * Copyright April 2020: Georg Pohl, 70174 Stuttgart
 * File: createHistogram.cpp
 * -------------------------
 * This functions implements the interface createHistogram.h
 */

#include <iostream>
#include <vector>
using namespace std;

/* {} [] | */					\

/**
 * Implementation notes: createHistogram
 * -------------------------------------
 * This implementation prints a histogram with asterisks from
 * vector entries, e. g.: 14, 35, 44, 49, 41, 45
 * 
 * 00s: 
 * 10s: **
 * 20s: 
 * 30s: *
 * 40s: ****
 * etc.
 * 
 * The ranges are generated by a for loop, their index and a appending
 * '0s', except for the last row, which is just '100'.
 * For each index of the outer loop, the inner loop runs through all
 * vector entries. With an integer division of each value by 10, the
 * affiliation to the range is checked. If the value fits in that range,
 * an asterisk is printed in that row. Since the whole vector is examined
 * for each row (range), all related values can be printed (asterisk) in
 * that row, and so on.
 * 
 * You can decide how many ranges (rows) are printed by providing
 * an integer.
 */

void printHistogram(vector<int> &v, int n) {
  for (size_t i = 0; i < n; ++i) {
    if (i == n - 1) {
       cout << i << "0: ";
    } else {
       cout << i << "0s: " ;
    }
    for (size_t j = 0; j < n; ++j) {
      if ( (v.at(j) / 10) == i ) {
	cout << "*";
      }
    }
    cout << endl;
  }
}
